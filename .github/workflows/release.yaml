name: Create release

# Required secrets:
# - APPLE_CERTIFICATE: Base64-encoded Developer ID certificate (p12 file)
# - APPLE_CERTIFICATE_PASSWORD: Password for the certificate
# - APPLE_USER_ID: Apple ID used for notarization
# - GITHUB_TOKEN: Automatically provided by GitHub

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.[0-9]*.[0-9]*

jobs:
  build-binaries:
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.34
      - name: Install dependencies
        run: |
          bun install
      - name: Build command
        run: |
          ./build.sh
          
      - name: Import Apple Certificate
        if: runner.os == 'macOS'
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
        run: |
          echo "$APPLE_CERTIFICATE" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
          
      - name: Sign macOS Binary
        if: runner.os == 'macOS'
        run: |
          codesign --force --options runtime --sign "Developer ID Application" ./releases/tt-dbt-macos
          
      - name: Notarize macOS Binary
        if: runner.os == 'macOS'
        env:
          APPLE_USER_ID: ${{ secrets.APPLE_USER_ID }}
        run: |
          xcrun notarytool submit ./releases/tt-dbt-macos --apple-id "$APPLE_USER_ID" --keychain-profile "notary-profile" --wait
          xcrun stapler staple ./releases/tt-dbt-macos
          
      - name: Create release
        if: runner.os == 'Linux'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          repository: ${{ github.repository }}
        run: |
          gh release create "$tag" \
              --repo="$repository" \
              --title="${repository#*/} ${tag#v}" \
              --generate-notes \
              ./releases/*.gz
              
      - name: Upload macOS Binary
        if: runner.os == 'macOS'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release upload "$tag" ./releases/tt-dbt-macos
